// Generated from org\develnext\lexer\css\CSS.g4 by ANTLR 4.5.3
package org.develnext.lexer.css;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CSSLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, NUMBER=26, NAMESPACE=27, IMPORTANT=28, IMPORT=29, CHARSET=30, 
		FONT_FACE=31, MEDIA=32, PAGE=33, ONLY=34, NOT=35, AND=36, URL=37, CLASS=38, 
		IDENT=39, HEX_COLOR=40, HASH=41, STRING=42, XML_COMMENT=43, COMMENT=44, 
		WS=45;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"NUMBER", "UNIT", "PERCENTAGE", "DISTANCE", "ANGLE", "TIME", "FREQUENCY", 
		"RESOLUTION", "NUM", "NAMESPACE", "IMPORTANT", "IMPORT", "CHARSET", "FONT_FACE", 
		"MEDIA", "PAGE", "ONLY", "NOT", "AND", "URL", "CLASS", "IDENT", "FLOAT", 
		"INT", "HEX_COLOR", "HASH", "NAME", "NMSTART", "NMCHAR", "NONASCII", "ESCAPE", 
		"UNICODE", "HEX", "DIGIT", "STRING", "ESC", "XML_COMMENT", "COMMENT", 
		"SPACE", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'{'", "'}'", "','", "'('", "':'", "')'", "'+'", "'>'", "'~'", 
		"'*'", "'|'", "'['", "'^='", "'$='", "'*='", "'='", "'~='", "'|='", "']'", 
		"'!'", "'/'", "'calc'", "'-'", "'attr'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "NUMBER", "NAMESPACE", "IMPORTANT", "IMPORT", "CHARSET", "FONT_FACE", 
		"MEDIA", "PAGE", "ONLY", "NOT", "AND", "URL", "CLASS", "IDENT", "HEX_COLOR", 
		"HASH", "STRING", "XML_COMMENT", "COMMENT", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CSSLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CSS.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/\u0211\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6"+
		"\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3"+
		"\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3"+
		"\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\5\33\u00c5\n\33\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\5\34\u00cd\n\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\5\36\u00f2\n\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\5\37\u0102\n\37\3 \3 \3 \5 \u0107\n \3!\3!\3!\3!\3!\5"+
		"!\u010e\n!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u011b\n\"\3"+
		"#\3#\5#\u011f\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3"+
		"%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*"+
		"\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\7.\u0178\n.\f.\16.\u017b\13.\3.\5.\u017e\n.\3/\3/\3/\3\60\5"+
		"\60\u0184\n\60\3\60\3\60\7\60\u0188\n\60\f\60\16\60\u018b\13\60\3\61\7"+
		"\61\u018e\n\61\f\61\16\61\u0191\13\61\3\61\3\61\6\61\u0195\n\61\r\61\16"+
		"\61\u0196\3\62\6\62\u019a\n\62\r\62\16\62\u019b\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\5\63\u01ab\n\63\3\64\3\64"+
		"\3\64\3\65\6\65\u01b1\n\65\r\65\16\65\u01b2\3\66\3\66\3\66\5\66\u01b8"+
		"\n\66\3\67\3\67\3\67\3\67\5\67\u01be\n\67\38\38\39\39\39\59\u01c5\n9\3"+
		":\3:\3:\3:\3:\3:\3;\3;\5;\u01cf\n;\3<\3<\3=\3=\3=\7=\u01d6\n=\f=\16=\u01d9"+
		"\13=\3=\3=\3=\3=\7=\u01df\n=\f=\16=\u01e2\13=\3=\5=\u01e5\n=\3>\3>\3>"+
		"\3?\3?\3?\3?\3?\3?\7?\u01f0\n?\f?\16?\u01f3\13?\3?\3?\3?\3?\3?\3?\3@\3"+
		"@\3@\3@\7@\u01ff\n@\f@\16@\u0202\13@\3@\3@\3@\3@\3@\3A\3A\3B\6B\u020c"+
		"\nB\rB\16B\u020d\3B\3B\7\u0179\u01d7\u01e0\u01f1\u0200\2C\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\29\2;\2=\2?\2A\2C\2E\2"+
		"G\35I\36K\37M O!Q\"S#U$W%Y&[\'](_)a\2c\2e*g+i\2k\2m\2o\2q\2s\2u\2w\2y"+
		",{\2}-\177.\u0081\2\u0083/\3\2\"\4\2GGgg\4\2OOoo\4\2ZZzz\4\2EEee\4\2J"+
		"Jjj\4\2TTtt\4\2XXxx\4\2YYyy\4\2KKkk\4\2PPpp\4\2CCcc\4\2RRrr\4\2VVvv\4"+
		"\2FFff\4\2IIii\4\2WWww\4\2UUuu\4\2\\\\||\4\2MMmm\4\2QQqq\4\2HHhh\4\2N"+
		"Nnn\4\2[[{{\5\2C\\aac|\6\2//C\\aac|\3\2\u0102\0\n\2$$\61\61^^ddhhpptt"+
		"vv\4\2CHch\3\2\62;\4\2\f\f\17\17\5\2\f\f$$))\5\2\13\f\16\17\"\"\u022f"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2"+
		"\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2"+
		"\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2y"+
		"\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0083\3\2\2\2\3\u0085\3\2\2\2\5\u0087"+
		"\3\2\2\2\7\u0089\3\2\2\2\t\u008b\3\2\2\2\13\u008d\3\2\2\2\r\u008f\3\2"+
		"\2\2\17\u0091\3\2\2\2\21\u0093\3\2\2\2\23\u0095\3\2\2\2\25\u0097\3\2\2"+
		"\2\27\u0099\3\2\2\2\31\u009b\3\2\2\2\33\u009d\3\2\2\2\35\u009f\3\2\2\2"+
		"\37\u00a2\3\2\2\2!\u00a5\3\2\2\2#\u00a8\3\2\2\2%\u00aa\3\2\2\2\'\u00ad"+
		"\3\2\2\2)\u00b0\3\2\2\2+\u00b2\3\2\2\2-\u00b4\3\2\2\2/\u00b6\3\2\2\2\61"+
		"\u00bb\3\2\2\2\63\u00bd\3\2\2\2\65\u00c2\3\2\2\2\67\u00cc\3\2\2\29\u00ce"+
		"\3\2\2\2;\u00f1\3\2\2\2=\u0101\3\2\2\2?\u0106\3\2\2\2A\u010d\3\2\2\2C"+
		"\u011a\3\2\2\2E\u011e\3\2\2\2G\u0120\3\2\2\2I\u012b\3\2\2\2K\u0135\3\2"+
		"\2\2M\u013d\3\2\2\2O\u0146\3\2\2\2Q\u0151\3\2\2\2S\u0158\3\2\2\2U\u015e"+
		"\3\2\2\2W\u0163\3\2\2\2Y\u0167\3\2\2\2[\u017d\3\2\2\2]\u017f\3\2\2\2_"+
		"\u0183\3\2\2\2a\u018f\3\2\2\2c\u0199\3\2\2\2e\u01aa\3\2\2\2g\u01ac\3\2"+
		"\2\2i\u01b0\3\2\2\2k\u01b7\3\2\2\2m\u01bd\3\2\2\2o\u01bf\3\2\2\2q\u01c1"+
		"\3\2\2\2s\u01c6\3\2\2\2u\u01ce\3\2\2\2w\u01d0\3\2\2\2y\u01e4\3\2\2\2{"+
		"\u01e6\3\2\2\2}\u01e9\3\2\2\2\177\u01fa\3\2\2\2\u0081\u0208\3\2\2\2\u0083"+
		"\u020b\3\2\2\2\u0085\u0086\7=\2\2\u0086\4\3\2\2\2\u0087\u0088\7}\2\2\u0088"+
		"\6\3\2\2\2\u0089\u008a\7\177\2\2\u008a\b\3\2\2\2\u008b\u008c\7.\2\2\u008c"+
		"\n\3\2\2\2\u008d\u008e\7*\2\2\u008e\f\3\2\2\2\u008f\u0090\7<\2\2\u0090"+
		"\16\3\2\2\2\u0091\u0092\7+\2\2\u0092\20\3\2\2\2\u0093\u0094\7-\2\2\u0094"+
		"\22\3\2\2\2\u0095\u0096\7@\2\2\u0096\24\3\2\2\2\u0097\u0098\7\u0080\2"+
		"\2\u0098\26\3\2\2\2\u0099\u009a\7,\2\2\u009a\30\3\2\2\2\u009b\u009c\7"+
		"~\2\2\u009c\32\3\2\2\2\u009d\u009e\7]\2\2\u009e\34\3\2\2\2\u009f\u00a0"+
		"\7`\2\2\u00a0\u00a1\7?\2\2\u00a1\36\3\2\2\2\u00a2\u00a3\7&\2\2\u00a3\u00a4"+
		"\7?\2\2\u00a4 \3\2\2\2\u00a5\u00a6\7,\2\2\u00a6\u00a7\7?\2\2\u00a7\"\3"+
		"\2\2\2\u00a8\u00a9\7?\2\2\u00a9$\3\2\2\2\u00aa\u00ab\7\u0080\2\2\u00ab"+
		"\u00ac\7?\2\2\u00ac&\3\2\2\2\u00ad\u00ae\7~\2\2\u00ae\u00af\7?\2\2\u00af"+
		"(\3\2\2\2\u00b0\u00b1\7_\2\2\u00b1*\3\2\2\2\u00b2\u00b3\7#\2\2\u00b3,"+
		"\3\2\2\2\u00b4\u00b5\7\61\2\2\u00b5.\3\2\2\2\u00b6\u00b7\7e\2\2\u00b7"+
		"\u00b8\7c\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7e\2\2\u00ba\60\3\2\2\2\u00bb"+
		"\u00bc\7/\2\2\u00bc\62\3\2\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7v\2\2\u00bf"+
		"\u00c0\7v\2\2\u00c0\u00c1\7t\2\2\u00c1\64\3\2\2\2\u00c2\u00c4\5E#\2\u00c3"+
		"\u00c5\5\67\34\2\u00c4\u00c3\3\2\2\2\u00c4\u00c5\3\2\2\2\u00c5\66\3\2"+
		"\2\2\u00c6\u00cd\59\35\2\u00c7\u00cd\5;\36\2\u00c8\u00cd\5C\"\2\u00c9"+
		"\u00cd\5=\37\2\u00ca\u00cd\5? \2\u00cb\u00cd\5A!\2\u00cc\u00c6\3\2\2\2"+
		"\u00cc\u00c7\3\2\2\2\u00cc\u00c8\3\2\2\2\u00cc\u00c9\3\2\2\2\u00cc\u00ca"+
		"\3\2\2\2\u00cc\u00cb\3\2\2\2\u00cd8\3\2\2\2\u00ce\u00cf\7\'\2\2\u00cf"+
		":\3\2\2\2\u00d0\u00d1\t\2\2\2\u00d1\u00f2\t\3\2\2\u00d2\u00d3\t\2\2\2"+
		"\u00d3\u00f2\t\4\2\2\u00d4\u00d5\t\5\2\2\u00d5\u00f2\t\6\2\2\u00d6\u00d7"+
		"\t\7\2\2\u00d7\u00d8\t\2\2\2\u00d8\u00f2\t\3\2\2\u00d9\u00da\t\b\2\2\u00da"+
		"\u00f2\t\t\2\2\u00db\u00dc\t\b\2\2\u00dc\u00f2\t\6\2\2\u00dd\u00de\t\b"+
		"\2\2\u00de\u00df\t\3\2\2\u00df\u00e0\t\n\2\2\u00e0\u00f2\t\13\2\2\u00e1"+
		"\u00e2\t\b\2\2\u00e2\u00e3\t\3\2\2\u00e3\u00e4\t\f\2\2\u00e4\u00f2\t\4"+
		"\2\2\u00e5\u00e6\t\5\2\2\u00e6\u00f2\t\3\2\2\u00e7\u00e8\t\3\2\2\u00e8"+
		"\u00f2\t\3\2\2\u00e9\u00ea\t\n\2\2\u00ea\u00f2\t\13\2\2\u00eb\u00ec\t"+
		"\r\2\2\u00ec\u00f2\t\4\2\2\u00ed\u00ee\t\r\2\2\u00ee\u00f2\t\16\2\2\u00ef"+
		"\u00f0\t\r\2\2\u00f0\u00f2\t\5\2\2\u00f1\u00d0\3\2\2\2\u00f1\u00d2\3\2"+
		"\2\2\u00f1\u00d4\3\2\2\2\u00f1\u00d6\3\2\2\2\u00f1\u00d9\3\2\2\2\u00f1"+
		"\u00db\3\2\2\2\u00f1\u00dd\3\2\2\2\u00f1\u00e1\3\2\2\2\u00f1\u00e5\3\2"+
		"\2\2\u00f1\u00e7\3\2\2\2\u00f1\u00e9\3\2\2\2\u00f1\u00eb\3\2\2\2\u00f1"+
		"\u00ed\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f2<\3\2\2\2\u00f3\u00f4\t\17\2\2"+
		"\u00f4\u00f5\t\2\2\2\u00f5\u0102\t\20\2\2\u00f6\u00f7\t\20\2\2\u00f7\u00f8"+
		"\t\7\2\2\u00f8\u00f9\t\f\2\2\u00f9\u0102\t\17\2\2\u00fa\u00fb\t\7\2\2"+
		"\u00fb\u00fc\t\f\2\2\u00fc\u0102\t\17\2\2\u00fd\u00fe\t\16\2\2\u00fe\u00ff"+
		"\t\21\2\2\u00ff\u0100\t\7\2\2\u0100\u0102\t\13\2\2\u0101\u00f3\3\2\2\2"+
		"\u0101\u00f6\3\2\2\2\u0101\u00fa\3\2\2\2\u0101\u00fd\3\2\2\2\u0102>\3"+
		"\2\2\2\u0103\u0107\t\22\2\2\u0104\u0105\t\3\2\2\u0105\u0107\t\22\2\2\u0106"+
		"\u0103\3\2\2\2\u0106\u0104\3\2\2\2\u0107@\3\2\2\2\u0108\u0109\t\6\2\2"+
		"\u0109\u010e\t\23\2\2\u010a\u010b\t\24\2\2\u010b\u010c\t\6\2\2\u010c\u010e"+
		"\t\23\2\2\u010d\u0108\3\2\2\2\u010d\u010a\3\2\2\2\u010eB\3\2\2\2\u010f"+
		"\u0110\t\17\2\2\u0110\u0111\t\r\2\2\u0111\u011b\t\n\2\2\u0112\u0113\t"+
		"\17\2\2\u0113\u0114\t\r\2\2\u0114\u0115\t\5\2\2\u0115\u011b\t\3\2\2\u0116"+
		"\u0117\t\17\2\2\u0117\u0118\t\r\2\2\u0118\u0119\t\r\2\2\u0119\u011b\t"+
		"\4\2\2\u011a\u010f\3\2\2\2\u011a\u0112\3\2\2\2\u011a\u0116\3\2\2\2\u011b"+
		"D\3\2\2\2\u011c\u011f\5c\62\2\u011d\u011f\5a\61\2\u011e\u011c\3\2\2\2"+
		"\u011e\u011d\3\2\2\2\u011fF\3\2\2\2\u0120\u0121\7B\2\2\u0121\u0122\t\13"+
		"\2\2\u0122\u0123\t\f\2\2\u0123\u0124\t\3\2\2\u0124\u0125\t\2\2\2\u0125"+
		"\u0126\t\22\2\2\u0126\u0127\t\r\2\2\u0127\u0128\t\f\2\2\u0128\u0129\t"+
		"\5\2\2\u0129\u012a\t\2\2\2\u012aH\3\2\2\2\u012b\u012c\t\n\2\2\u012c\u012d"+
		"\t\3\2\2\u012d\u012e\t\r\2\2\u012e\u012f\t\25\2\2\u012f\u0130\t\7\2\2"+
		"\u0130\u0131\t\16\2\2\u0131\u0132\t\f\2\2\u0132\u0133\t\13\2\2\u0133\u0134"+
		"\t\16\2\2\u0134J\3\2\2\2\u0135\u0136\7B\2\2\u0136\u0137\t\n\2\2\u0137"+
		"\u0138\t\3\2\2\u0138\u0139\t\r\2\2\u0139\u013a\t\25\2\2\u013a\u013b\t"+
		"\7\2\2\u013b\u013c\t\16\2\2\u013cL\3\2\2\2\u013d\u013e\7B\2\2\u013e\u013f"+
		"\t\5\2\2\u013f\u0140\t\6\2\2\u0140\u0141\t\f\2\2\u0141\u0142\t\7\2\2\u0142"+
		"\u0143\t\22\2\2\u0143\u0144\t\2\2\2\u0144\u0145\t\16\2\2\u0145N\3\2\2"+
		"\2\u0146\u0147\7B\2\2\u0147\u0148\t\26\2\2\u0148\u0149\t\25\2\2\u0149"+
		"\u014a\t\13\2\2\u014a\u014b\t\16\2\2\u014b\u014c\7/\2\2\u014c\u014d\t"+
		"\26\2\2\u014d\u014e\t\f\2\2\u014e\u014f\t\5\2\2\u014f\u0150\t\2\2\2\u0150"+
		"P\3\2\2\2\u0151\u0152\7B\2\2\u0152\u0153\t\3\2\2\u0153\u0154\t\2\2\2\u0154"+
		"\u0155\t\17\2\2\u0155\u0156\t\n\2\2\u0156\u0157\t\f\2\2\u0157R\3\2\2\2"+
		"\u0158\u0159\7B\2\2\u0159\u015a\t\r\2\2\u015a\u015b\t\f\2\2\u015b\u015c"+
		"\t\20\2\2\u015c\u015d\t\2\2\2\u015dT\3\2\2\2\u015e\u015f\t\25\2\2\u015f"+
		"\u0160\t\13\2\2\u0160\u0161\t\27\2\2\u0161\u0162\t\30\2\2\u0162V\3\2\2"+
		"\2\u0163\u0164\t\13\2\2\u0164\u0165\t\25\2\2\u0165\u0166\t\16\2\2\u0166"+
		"X\3\2\2\2\u0167\u0168\t\f\2\2\u0168\u0169\t\13\2\2\u0169\u016a\t\17\2"+
		"\2\u016aZ\3\2\2\2\u016b\u016c\t\21\2\2\u016c\u016d\t\7\2\2\u016d\u016e"+
		"\t\27\2\2\u016e\u016f\7*\2\2\u016f\u0170\5y=\2\u0170\u0171\7+\2\2\u0171"+
		"\u017e\3\2\2\2\u0172\u0173\t\21\2\2\u0173\u0174\t\7\2\2\u0174\u0175\t"+
		"\27\2\2\u0175\u0179\7*\2\2\u0176\u0178\13\2\2\2\u0177\u0176\3\2\2\2\u0178"+
		"\u017b\3\2\2\2\u0179\u017a\3\2\2\2\u0179\u0177\3\2\2\2\u017a\u017c\3\2"+
		"\2\2\u017b\u0179\3\2\2\2\u017c\u017e\7+\2\2\u017d\u016b\3\2\2\2\u017d"+
		"\u0172\3\2\2\2\u017e\\\3\2\2\2\u017f\u0180\7\60\2\2\u0180\u0181\5_\60"+
		"\2\u0181^\3\2\2\2\u0182\u0184\7/\2\2\u0183\u0182\3\2\2\2\u0183\u0184\3"+
		"\2\2\2\u0184\u0185\3\2\2\2\u0185\u0189\5k\66\2\u0186\u0188\5m\67\2\u0187"+
		"\u0186\3\2\2\2\u0188\u018b\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2"+
		"\2\2\u018a`\3\2\2\2\u018b\u0189\3\2\2\2\u018c\u018e\5w<\2\u018d\u018c"+
		"\3\2\2\2\u018e\u0191\3\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190"+
		"\u0192\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0194\7\60\2\2\u0193\u0195\5"+
		"w<\2\u0194\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0194\3\2\2\2\u0196"+
		"\u0197\3\2\2\2\u0197b\3\2\2\2\u0198\u019a\5w<\2\u0199\u0198\3\2\2\2\u019a"+
		"\u019b\3\2\2\2\u019b\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019cd\3\2\2\2"+
		"\u019d\u019e\7%\2\2\u019e\u019f\5u;\2\u019f\u01a0\5u;\2\u01a0\u01a1\5"+
		"u;\2\u01a1\u01ab\3\2\2\2\u01a2\u01a3\7%\2\2\u01a3\u01a4\5u;\2\u01a4\u01a5"+
		"\5u;\2\u01a5\u01a6\5u;\2\u01a6\u01a7\5u;\2\u01a7\u01a8\5u;\2\u01a8\u01a9"+
		"\5u;\2\u01a9\u01ab\3\2\2\2\u01aa\u019d\3\2\2\2\u01aa\u01a2\3\2\2\2\u01ab"+
		"f\3\2\2\2\u01ac\u01ad\7%\2\2\u01ad\u01ae\5i\65\2\u01aeh\3\2\2\2\u01af"+
		"\u01b1\5m\67\2\u01b0\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b0\3\2"+
		"\2\2\u01b2\u01b3\3\2\2\2\u01b3j\3\2\2\2\u01b4\u01b8\t\31\2\2\u01b5\u01b8"+
		"\5o8\2\u01b6\u01b8\5q9\2\u01b7\u01b4\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b7"+
		"\u01b6\3\2\2\2\u01b8l\3\2\2\2\u01b9\u01be\t\32\2\2\u01ba\u01be\5w<\2\u01bb"+
		"\u01be\5o8\2\u01bc\u01be\5q9\2\u01bd\u01b9\3\2\2\2\u01bd\u01ba\3\2\2\2"+
		"\u01bd\u01bb\3\2\2\2\u01bd\u01bc\3\2\2\2\u01ben\3\2\2\2\u01bf\u01c0\t"+
		"\33\2\2\u01c0p\3\2\2\2\u01c1\u01c4\7^\2\2\u01c2\u01c5\t\34\2\2\u01c3\u01c5"+
		"\5s:\2\u01c4\u01c2\3\2\2\2\u01c4\u01c3\3\2\2\2\u01c5r\3\2\2\2\u01c6\u01c7"+
		"\7w\2\2\u01c7\u01c8\5u;\2\u01c8\u01c9\5u;\2\u01c9\u01ca\5u;\2\u01ca\u01cb"+
		"\5u;\2\u01cbt\3\2\2\2\u01cc\u01cf\t\35\2\2\u01cd\u01cf\5w<\2\u01ce\u01cc"+
		"\3\2\2\2\u01ce\u01cd\3\2\2\2\u01cfv\3\2\2\2\u01d0\u01d1\t\36\2\2\u01d1"+
		"x\3\2\2\2\u01d2\u01d7\7$\2\2\u01d3\u01d6\5{>\2\u01d4\u01d6\n\37\2\2\u01d5"+
		"\u01d3\3\2\2\2\u01d5\u01d4\3\2\2\2\u01d6\u01d9\3\2\2\2\u01d7\u01d8\3\2"+
		"\2\2\u01d7\u01d5\3\2\2\2\u01d8\u01da\3\2\2\2\u01d9\u01d7\3\2\2\2\u01da"+
		"\u01e5\7$\2\2\u01db\u01e0\7)\2\2\u01dc\u01df\5{>\2\u01dd\u01df\n\37\2"+
		"\2\u01de\u01dc\3\2\2\2\u01de\u01dd\3\2\2\2\u01df\u01e2\3\2\2\2\u01e0\u01e1"+
		"\3\2\2\2\u01e0\u01de\3\2\2\2\u01e1\u01e3\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e3"+
		"\u01e5\7)\2\2\u01e4\u01d2\3\2\2\2\u01e4\u01db\3\2\2\2\u01e5z\3\2\2\2\u01e6"+
		"\u01e7\7^\2\2\u01e7\u01e8\t \2\2\u01e8|\3\2\2\2\u01e9\u01ea\7>\2\2\u01ea"+
		"\u01eb\7#\2\2\u01eb\u01ec\7/\2\2\u01ec\u01ed\7/\2\2\u01ed\u01f1\3\2\2"+
		"\2\u01ee\u01f0\13\2\2\2\u01ef\u01ee\3\2\2\2\u01f0\u01f3\3\2\2\2\u01f1"+
		"\u01f2\3\2\2\2\u01f1\u01ef\3\2\2\2\u01f2\u01f4\3\2\2\2\u01f3\u01f1\3\2"+
		"\2\2\u01f4\u01f5\7/\2\2\u01f5\u01f6\7/\2\2\u01f6\u01f7\7@\2\2\u01f7\u01f8"+
		"\3\2\2\2\u01f8\u01f9\b?\2\2\u01f9~\3\2\2\2\u01fa\u01fb\7\61\2\2\u01fb"+
		"\u01fc\7,\2\2\u01fc\u0200\3\2\2\2\u01fd\u01ff\13\2\2\2\u01fe\u01fd\3\2"+
		"\2\2\u01ff\u0202\3\2\2\2\u0200\u0201\3\2\2\2\u0200\u01fe\3\2\2\2\u0201"+
		"\u0203\3\2\2\2\u0202\u0200\3\2\2\2\u0203\u0204\7,\2\2\u0204\u0205\7\61"+
		"\2\2\u0205\u0206\3\2\2\2\u0206\u0207\b@\2\2\u0207\u0080\3\2\2\2\u0208"+
		"\u0209\t!\2\2\u0209\u0082\3\2\2\2\u020a\u020c\5\u0081A\2\u020b\u020a\3"+
		"\2\2\2\u020c\u020d\3\2\2\2\u020d\u020b\3\2\2\2\u020d\u020e\3\2\2\2\u020e"+
		"\u020f\3\2\2\2\u020f\u0210\bB\2\2\u0210\u0084\3\2\2\2 \2\u00c4\u00cc\u00f1"+
		"\u0101\u0106\u010d\u011a\u011e\u0179\u017d\u0183\u0189\u018f\u0196\u019b"+
		"\u01aa\u01b2\u01b7\u01bd\u01c4\u01ce\u01d5\u01d7\u01de\u01e0\u01e4\u01f1"+
		"\u0200\u020d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}